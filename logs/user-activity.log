2024-08-03 13:49:01 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 13:49:01 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 288 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 13:49:01 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 13:49:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 13:49:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 4 JPA repository interfaces.
2024-08-03 13:49:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 13:49:02 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 13:49:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 13:49:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 13:49:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 13:49:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1182 ms
2024-08-03 13:49:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 13:49:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 13:49:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 13:49:02 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 13:49:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 13:49:03 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@39c5a105
2024-08-03 13:49:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 13:49:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 13:49:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 13:49:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 13:49:04 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 13:49:04 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 13:49:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 13:49:05 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 13:49:05 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 13:49:05 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 13:49:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 13:49:05 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.791 seconds (process running for 5.306)
2024-08-03 13:56:48 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m15s330ms305µs700ns).
2024-08-03 13:57:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 13:57:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 13:57:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:00:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:00:06 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:00:06 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:00:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:00:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:00:07 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:01:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:01:15 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:01:15 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:01:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:01:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:01:16 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:01:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 14:01:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:01:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 664A49772C55CBA065844CDFD6944054
2024-08-03 14:01:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 14:01:27 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-03 14:01:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:01:42 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 5C7E6D464379ED42358D15DA0CEFEE04, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:01:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@65d6d292]
2024-08-03 14:01:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:01:42 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:01:42.047863800
2024-08-03 14:01:42 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:01:42.047863800
2024-08-03 14:03:49 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.classic.PatternLayout("null") - Empty or null pattern.
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.TransferApp.MoneyTransfer.MoneyTransferApplication.main(MoneyTransferApplication.java:10)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.classic.PatternLayout("null") - Empty or null pattern.
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:282)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:260)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:81)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:61)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:193)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 19 common frames omitted
2024-08-03 14:22:09 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:22:09 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 14356 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:22:09 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:22:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:22:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 4 JPA repository interfaces.
2024-08-03 14:22:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:22:10 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:22:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:22:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:22:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:22:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1242 ms
2024-08-03 14:22:10 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:22:10 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:22:10 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:22:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:22:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:22:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@799971ac
2024-08-03 14:22:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:22:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:22:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:22:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:22:15 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:22:15 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:22:15 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:22:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:22:15 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:22:15 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:22:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:22:16 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 7.107 seconds (process running for 8.346)
2024-08-03 14:22:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:22:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:22:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-08-03 14:22:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:22:25 [http-nio-8080-exec-1] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-02T12:04:33Z. Current time: 2024-08-03T11:22:25Z, a difference of 83872449 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-03 14:22:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:22:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/transactions/transfer?continue to session
2024-08-03 14:22:25 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:22:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:22:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:22:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 14:22:25 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:22:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 14:22:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:22:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 14:22:32 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: Anonymous, URL: /api/login, Timestamp: 2024-08-03T14:22:32.686012
2024-08-03 14:22:32 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: Anonymous, URL: /api/login, Timestamp: 2024-08-03T14:22:32.686012
2024-08-03 14:22:33 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-03 14:22:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:22:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from B3486339D739B3488C14742792533F23
2024-08-03 14:22:45 [http-nio-8080-exec-6] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session D347110C09340ABB66DEA5A4DE6EF6AC, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:22:45 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@9c5f48b]
2024-08-03 14:22:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:22:45 [http-nio-8080-exec-6] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:22:45.900206200
2024-08-03 14:22:45 [http-nio-8080-exec-6] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:22:45.900206200
2024-08-03 14:43:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:43:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:43:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:44:05 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:44:05 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 11276 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:44:05 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:44:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:44:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 4 JPA repository interfaces.
2024-08-03 14:44:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:44:06 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:44:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:44:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:44:06 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:44:06 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1088 ms
2024-08-03 14:44:06 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:44:06 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:44:06 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:44:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:44:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:44:07 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7be62956
2024-08-03 14:44:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:44:07 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:44:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:44:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:44:09 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:44:09 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:44:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:44:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:44:09 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:44:09 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:44:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:44:09 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.729 seconds (process running for 6.206)
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-08-03 14:44:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:44:19 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 09287C33BA857FF69219C0031F0321C2, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:44:19 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@43cdf26]
2024-08-03 14:44:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: null, Recipient: null, Timestamp: 1722685459647
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: null, Recipient: null, Timestamp: 1722685459647
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:44:19.647777600
2024-08-03 14:44:19 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:44:19.647777600
2024-08-03 14:44:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:44:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:44:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:44:39 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: null, Recipient: null, Timestamp: 1722685479388
2024-08-03 14:44:39 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: null, Recipient: null, Timestamp: 1722685479388
2024-08-03 14:44:39 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:44:39.388658100
2024-08-03 14:44:39 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:44:39.388658100
2024-08-03 14:45:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:45:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:45:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:45:52 [http-nio-8080-exec-7] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: null, Recipient: null, Timestamp: 1722685552080
2024-08-03 14:45:52 [http-nio-8080-exec-7] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: null, Recipient: null, Timestamp: 1722685552080
2024-08-03 14:45:52 [http-nio-8080-exec-7] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:45:52.080798800
2024-08-03 14:45:52 [http-nio-8080-exec-7] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:45:52.080798800
2024-08-03 14:49:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:49:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:49:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:49:40 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:49:40 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 8212 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:49:40 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:49:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:49:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 4 JPA repository interfaces.
2024-08-03 14:49:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:49:41 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:49:41 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:49:41 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:49:41 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:49:41 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1170 ms
2024-08-03 14:49:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:49:41 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:49:41 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:49:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:49:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:49:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31e22365
2024-08-03 14:49:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:49:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:49:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:49:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:49:43 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:49:43 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:49:43 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:49:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:49:44 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:49:44 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:49:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:49:44 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.549 seconds (process running for 5.046)
2024-08-03 14:49:55 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:49:55 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:49:55 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 3E26389E22C9EAB8B6CC655DE04DC102, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@1389cc97]
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:49:55 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "com.fasterxml.jackson.databind.JsonNode.asText()" because the return value of "com.fasterxml.jackson.databind.JsonNode.get(String)" is null
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:49:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2024-08-03 14:50:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:50:08 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:50:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:50:08 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "com.fasterxml.jackson.databind.JsonNode.asText()" because the return value of "com.fasterxml.jackson.databind.JsonNode.get(String)" is null
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 14:50:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:50:08 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:50:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2024-08-03 14:50:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 14:50:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 14:50:34 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:50:34 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "com.fasterxml.jackson.databind.JsonNode.asText()" because the return value of "com.fasterxml.jackson.databind.JsonNode.get(String)" is null
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 14:50:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:50:34 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:50:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2024-08-03 14:53:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:53:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:53:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:53:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:53:07 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 14540 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:53:07 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:53:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:53:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 4 JPA repository interfaces.
2024-08-03 14:53:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:53:08 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:53:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:53:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:53:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:53:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1050 ms
2024-08-03 14:53:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:53:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:53:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:53:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:53:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:53:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@53d87b2d
2024-08-03 14:53:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:53:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:53:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:53:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:53:10 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:53:10 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:53:10 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:53:11 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:53:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:53:11 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:53:11 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:53:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:53:11 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.126 seconds (process running for 4.561)
2024-08-03 14:53:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:53:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:53:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:53:12 [http-nio-8080-exec-1] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-03T11:52:33Z. Current time: 2024-08-03T11:53:12Z, a difference of 39242 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 3E26389E22C9EAB8B6CC655DE04DC102
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/transactions/transfer?continue to session
2024-08-03 14:53:12 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:53:12 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 14:53:12 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:53:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 14:53:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:53:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 14:53:15 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "com.fasterxml.jackson.databind.JsonNode.asText()" because the return value of "com.fasterxml.jackson.databind.JsonNode.get(String)" is null
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 14:53:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:53:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:53:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 14:53:15 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:54:07 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:54:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:54:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:54:13 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:54:13 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 15220 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:54:13 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:54:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:54:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 4 JPA repository interfaces.
2024-08-03 14:54:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:54:14 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:54:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:54:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:54:14 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:54:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1018 ms
2024-08-03 14:54:14 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:54:14 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:54:14 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:54:14 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:54:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:54:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@513fab1e
2024-08-03 14:54:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:54:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:54:15 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:54:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:54:16 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:54:16 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:54:16 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:54:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:54:16 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:54:16 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:54:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:54:16 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.966 seconds (process running for 4.406)
2024-08-03 14:54:21 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:54:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:54:21 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:54:21 [http-nio-8080-exec-2] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-03T11:52:33Z. Current time: 2024-08-03T11:54:21Z, a difference of 108203 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 7E16AE31E68E4A8EC501168092BB2F15
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/transactions/transfer?continue to session
2024-08-03 14:54:21 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:54:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 14:54:21 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:54:41 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:54:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:54:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:55:06 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:55:06 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 6792 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:55:06 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:55:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:55:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 4 JPA repository interfaces.
2024-08-03 14:55:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:55:07 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:55:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:55:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:55:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:55:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1050 ms
2024-08-03 14:55:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:55:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:55:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:55:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:55:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:55:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@470135da
2024-08-03 14:55:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:55:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:55:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:55:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:55:09 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:55:09 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:55:09 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:55:10 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:55:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:55:10 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.982 seconds (process running for 4.425)
2024-08-03 14:55:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:55:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:55:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:55:14 [http-nio-8080-exec-1] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-03T11:52:33Z. Current time: 2024-08-03T11:55:14Z, a difference of 161670 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id CFE4F1ED51E34AE579AD2BFFC5B4E8D2
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/transactions/transfer?continue to session
2024-08-03 14:55:14 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:55:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 14:55:14 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 14:55:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 14:55:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:55:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 14:55:18 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: Anonymous, URL: /api/login, Timestamp: 2024-08-03T14:55:18.353095800
2024-08-03 14:55:18 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: Anonymous, URL: /api/login, Timestamp: 2024-08-03T14:55:18.353095800
2024-08-03 14:55:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:55:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:55:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:55:54 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:55:54 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 6420 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:55:54 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:55:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:55:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 4 JPA repository interfaces.
2024-08-03 14:55:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:55:55 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:55:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:55:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:55:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:55:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1042 ms
2024-08-03 14:55:55 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:55:55 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:55:55 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:55:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:55:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:55:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4746fb8c
2024-08-03 14:55:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:55:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:55:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:55:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:55:57 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:55:57 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:55:57 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:55:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:55:58 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:55:58 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:55:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:55:58 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.115 seconds (process running for 4.532)
2024-08-03 14:56:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:56:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:56:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-08-03 14:56:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 14:56:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 14:56:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id CEE82BAF21AD22F3A8A7B74A269559FD
2024-08-03 14:56:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 14:56:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-03 14:56:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:56:20 [http-nio-8080-exec-3] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 722AD24546454AF47EFBFE06713F25A2, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:56:20 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@651af8ba]
2024-08-03 14:56:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:56:20 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:56:20.567341600
2024-08-03 14:56:20 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:56:20.567341600
2024-08-03 14:56:52 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:56:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:56:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:57:37 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:57:37 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 628 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:57:37 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:57:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:57:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 4 JPA repository interfaces.
2024-08-03 14:57:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:57:38 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:57:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:57:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:57:38 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:57:38 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1018 ms
2024-08-03 14:57:39 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:57:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:57:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:57:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:57:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:57:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@50fa5938
2024-08-03 14:57:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:57:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:57:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:57:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:57:40 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:57:40 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:57:40 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:57:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:57:41 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:57:41 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:57:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:57:41 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.876 seconds (process running for 4.306)
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:57:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:57:46 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 77CAFD35AC2BF2791397CFAADBEE7BF1, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:57:46 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@588fb4ec]
2024-08-03 14:57:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 1722686266818
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 1722686266818
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:57:46.809221500
2024-08-03 14:57:46 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:57:46.809221500
2024-08-03 14:58:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:58:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:58:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:58:11 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:58:11 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 3620 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:58:11 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:58:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:58:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 4 JPA repository interfaces.
2024-08-03 14:58:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:58:12 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:58:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:58:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:58:12 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:58:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1025 ms
2024-08-03 14:58:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:58:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:58:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:58:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:58:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:58:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31e22365
2024-08-03 14:58:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:58:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:58:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:58:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:58:14 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:58:14 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:58:14 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:58:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:58:15 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:58:15 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:58:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:58:15 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.923 seconds (process running for 4.345)
2024-08-03 14:58:17 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:58:17 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:58:17 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 4484950081F343C80EB0DC8970D6BE64, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@17581fdb]
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:58:17 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "com.fasterxml.jackson.databind.JsonNode.asText()" because the return value of "com.fasterxml.jackson.databind.JsonNode.get(String)" is null
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:58:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2024-08-03 14:58:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:58:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:58:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:58:25 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "com.fasterxml.jackson.databind.JsonNode.asText()" because the return value of "com.fasterxml.jackson.databind.JsonNode.get(String)" is null
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 14:58:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 14:58:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 14:58:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2024-08-03 14:59:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:59:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:59:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:59:28 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:59:28 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 1680 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:59:28 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:59:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:59:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 4 JPA repository interfaces.
2024-08-03 14:59:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:59:29 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:59:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:59:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:59:29 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:59:29 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1011 ms
2024-08-03 14:59:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:59:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:59:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:59:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:59:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:59:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3be46d9c
2024-08-03 14:59:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:59:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:59:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:59:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:59:31 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:59:31 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:31 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:59:32 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:59:32 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:59:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:59:32 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.649 seconds (process running for 4.079)
2024-08-03 14:59:41 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:59:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 14:59:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 14:59:55 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 14:59:55 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 10388 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 14:59:55 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 14:59:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 14:59:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 4 JPA repository interfaces.
2024-08-03 14:59:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 14:59:56 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 14:59:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 14:59:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 14:59:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 14:59:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1011 ms
2024-08-03 14:59:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 14:59:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 14:59:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 14:59:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 14:59:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 14:59:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@799971ac
2024-08-03 14:59:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 14:59:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 14:59:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 14:59:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 14:59:58 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 14:59:58 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 14:59:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 14:59:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 14:59:58 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 14:59:59 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 14:59:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 14:59:59 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.969 seconds (process running for 4.391)
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 14:59:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 14:59:59 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session D442013425CCF1D8231104E6ED34D261, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 14:59:59 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@71de2f62]
2024-08-03 14:59:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 1722686399745
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 1722686399745
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:59:59.734136100
2024-08-03 14:59:59 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Timestamp: 2024-08-03T14:59:59.734136100
2024-08-03 15:01:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:01:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:01:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:01:29 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:01:29 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 4756 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:01:29 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:01:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:01:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 4 JPA repository interfaces.
2024-08-03 15:01:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:01:30 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:01:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:01:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:01:30 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:01:30 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1140 ms
2024-08-03 15:01:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:01:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:01:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:01:31 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:01:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:01:31 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e482ecd
2024-08-03 15:01:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:01:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:01:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:01:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:01:32 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:01:32 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:01:32 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:01:32 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:01:33 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:01:33 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:01:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:01:33 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.294 seconds (process running for 4.745)
2024-08-03 15:01:37 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:01:37 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:01:37 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 15:01:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 15:01:38 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session B97726BD5C2168807295A37964F95A76, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:01:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@1b0a7e71]
2024-08-03 15:01:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 15:01:38 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:01:38.133297800
2024-08-03 15:01:38 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:01:38.133297800
2024-08-03 15:01:38 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Stream closed
	at org.apache.catalina.connector.InputBuffer.throwIfClosed(InputBuffer.java:545)
	at org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:356)
	at org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:132)
	at java.base/sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:350)
	at java.base/sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:393)
	at java.base/sun.nio.cs.StreamDecoder.lockedRead(StreamDecoder.java:217)
	at java.base/sun.nio.cs.StreamDecoder.read(StreamDecoder.java:171)
	at java.base/java.io.InputStreamReader.read(InputStreamReader.java:186)
	at java.base/java.io.BufferedReader.fill(BufferedReader.java:160)
	at java.base/java.io.BufferedReader.implReadLine(BufferedReader.java:370)
	at java.base/java.io.BufferedReader.readLine(BufferedReader.java:347)
	at java.base/java.io.BufferedReader.readLine(BufferedReader.java:436)
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.readRequestBody(UserActivityFilter.java:83)
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.TransferApp.MoneyTransfer.logging.UserActivityFilter.doFilter(UserActivityFilter.java:71)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.TransferApp.MoneyTransfer.service.sercurity.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1570)
2024-08-03 15:01:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-03 15:01:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 15:01:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2024-08-03 15:03:00 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:03:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:03:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:03:06 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:03:06 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 13708 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:03:06 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:03:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:03:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 4 JPA repository interfaces.
2024-08-03 15:03:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:03:07 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:03:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:03:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:03:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:03:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1086 ms
2024-08-03 15:03:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:03:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:03:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:03:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:03:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:03:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e8986b6
2024-08-03 15:03:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:03:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:03:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:03:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:03:09 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:03:09 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:03:09 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:03:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:03:09 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:03:10 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:03:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:03:10 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.233 seconds (process running for 4.712)
2024-08-03 15:03:11 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:03:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:03:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 15:03:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 15:03:11 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 89671E59914D037A2979B4801EE5D0E7, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:03:11 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@251757c2]
2024-08-03 15:03:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 15:03:13 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:03:13.836533700
2024-08-03 15:03:13 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:03:13.836533700
2024-08-03 15:03:13 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:03:13.841533
2024-08-03 15:03:13 [http-nio-8080-exec-1] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:03:13.841533
2024-08-03 15:05:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:05:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:05:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:05:45 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:05:45 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 11628 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:05:45 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:05:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:05:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 4 JPA repository interfaces.
2024-08-03 15:05:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:05:46 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:05:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:05:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:05:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:05:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1026 ms
2024-08-03 15:05:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:05:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:05:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:05:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:05:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:05:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@492fa72a
2024-08-03 15:05:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:05:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:05:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:05:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:05:48 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:05:48 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:05:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:05:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:05:48 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:05:48 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:05:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:05:48 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 3.817 seconds (process running for 4.266)
2024-08-03 15:05:55 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:05:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:05:55 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 15:05:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 15:05:56 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 7677787A14999DC6DD40393961D6426D, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:05:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@41ba247c]
2024-08-03 15:05:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 15:05:57 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:05:57.830725200
2024-08-03 15:05:57 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:05:57.830725200
2024-08-03 15:15:26 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m39s789ms738µs400ns).
2024-08-03 15:18:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:18:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:18:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:19:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:19:16 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 8136 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:19:16 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:19:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:19:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 4 JPA repository interfaces.
2024-08-03 15:19:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:19:17 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:19:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:19:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:19:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:19:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1275 ms
2024-08-03 15:19:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:19:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:19:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:19:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:19:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:19:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3dc2f14
2024-08-03 15:19:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:19:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:19:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:19:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:19:20 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:19:20 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:19:20 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:19:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:19:20 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:19:20 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:19:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:19:20 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 5.028 seconds (process running for 5.652)
2024-08-03 15:19:22 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:19:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:19:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 15:19:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-03 15:19:22 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 722AE0EAD4A0CAB01DFB46CE16D9714E, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:19:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@4e1868b]
2024-08-03 15:19:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-03 15:19:24 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:19:24.558949600
2024-08-03 15:19:24 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 1, Recipient: 2, Timestamp: 2024-08-03T15:19:24.558949600
2024-08-03 15:21:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/favorites/1
2024-08-03 15:21:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 15:21:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/favorites/1
2024-08-03 15:21:37 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1, Method: GET, Timestamp: 2024-08-03T15:21:37.048296100
2024-08-03 15:21:37 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1, Method: GET, Timestamp: 2024-08-03T15:21:37.048296100
2024-08-03 15:21:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/favorites/1/3
2024-08-03 15:21:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 15:21:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/favorites/1/3
2024-08-03 15:21:56 [http-nio-8080-exec-6] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:21:56.385235100
2024-08-03 15:21:56 [http-nio-8080-exec-6] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:21:56.385235100
2024-08-03 15:22:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/favorites/1
2024-08-03 15:22:03 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 15:22:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/favorites/1
2024-08-03 15:22:03 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1, Method: GET, Timestamp: 2024-08-03T15:22:03.631864400
2024-08-03 15:22:03 [http-nio-8080-exec-3] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1, Method: GET, Timestamp: 2024-08-03T15:22:03.631864400
2024-08-03 15:32:58 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:33:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:33:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:33:58 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:33:58 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 10616 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:33:58 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:33:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:33:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 4 JPA repository interfaces.
2024-08-03 15:34:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:34:00 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:34:00 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:34:00 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:34:00 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:34:00 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1474 ms
2024-08-03 15:34:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:34:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:34:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:34:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:34:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:34:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72ceafeb
2024-08-03 15:34:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:34:02 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:34:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:34:03 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:34:04 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:34:04 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:34:04 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:34:04 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:34:04 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:34:04 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:34:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:34:04 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 6.455 seconds (process running for 7.07)
2024-08-03 15:35:23 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:35:23 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:35:23 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/favorites/1/3
2024-08-03 15:35:23 [http-nio-8080-exec-3] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-03T12:26:06Z. Current time: 2024-08-03T12:35:23Z, a difference of 557539 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 722AE0EAD4A0CAB01DFB46CE16D9714E
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/favorites/1/3?continue to session
2024-08-03 15:35:23 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /error
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 15:35:23 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 15:35:23 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 15:35:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/favorites/1/3
2024-08-03 15:35:37 [http-nio-8080-exec-2] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-03T12:26:06Z. Current time: 2024-08-03T12:35:37Z, a difference of 571863 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-03 15:35:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 15:35:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/favorites/1/3?continue to session
2024-08-03 15:35:37 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 15:35:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /error
2024-08-03 15:35:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 15:35:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-03 15:35:37 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-03 15:35:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-03 15:35:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-03 15:35:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-03 15:35:42 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-03 15:35:42 [http-nio-8080-exec-4] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/login, Method: POST, Timestamp: 2024-08-03T15:35:42.141794100
2024-08-03 15:35:42 [http-nio-8080-exec-4] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/login, Method: POST, Timestamp: 2024-08-03T15:35:42.141794100
2024-08-03 15:35:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/favorites/1/3
2024-08-03 15:35:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 92322AD3262E6E095053434CF5EAFB34
2024-08-03 15:35:52 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 6E01069AF155EC1C7D0CC886A4D22132, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:35:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@7d7f382a]
2024-08-03 15:35:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/favorites/1/3
2024-08-03 15:35:52 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:35:52.920302800
2024-08-03 15:35:52 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:35:52.920302800
2024-08-03 15:36:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:36:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:36:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:36:54 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:36:54 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 10636 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:36:54 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:36:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:36:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 4 JPA repository interfaces.
2024-08-03 15:36:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:36:55 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:36:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:36:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:36:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:36:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1088 ms
2024-08-03 15:36:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:36:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:36:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:36:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:36:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:36:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3ad2883a
2024-08-03 15:36:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:36:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:36:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:36:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:36:58 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:36:58 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:36:58 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:36:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:36:58 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:36:58 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:36:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:36:58 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.459 seconds (process running for 4.948)
2024-08-03 15:37:11 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:37:11 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:37:11 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 15:37:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/favorites/1/3
2024-08-03 15:37:11 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session BDC024AF9FDB3B49000A5C2FC55B2C2E, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:37:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@53e6895d]
2024-08-03 15:37:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/favorites/1/3
2024-08-03 15:37:11 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:37:11.657213300
2024-08-03 15:37:11 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:37:11.657213300
2024-08-03 15:40:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:40:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:40:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-03 15:40:25 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-03 15:40:25 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 8140 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-03 15:40:25 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-03 15:40:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-03 15:40:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 4 JPA repository interfaces.
2024-08-03 15:40:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-03 15:40:26 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-03 15:40:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-03 15:40:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-03 15:40:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-03 15:40:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1065 ms
2024-08-03 15:40:26 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-03 15:40:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-03 15:40:26 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-03 15:40:27 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-03 15:40:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-03 15:40:27 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e8986b6
2024-08-03 15:40:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-03 15:40:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-03 15:40:28 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-03 15:40:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:40:28 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-03 15:40:28 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-03 15:40:28 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-03 15:40:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-03 15:40:29 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-03 15:40:29 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-03 15:40:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-03 15:40:29 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 4.014 seconds (process running for 4.452)
2024-08-03 15:40:38 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-03 15:40:38 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-03 15:40:38 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-08-03 15:40:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/favorites/1/3
2024-08-03 15:40:38 [http-nio-8080-exec-2] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session CFB262F5A0794F978A9CEDF163B704C6, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-03 15:40:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@199441f3]
2024-08-03 15:40:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/favorites/1/3
2024-08-03 15:40:38 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:40:38.853755300
2024-08-03 15:40:38 [http-nio-8080-exec-2] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1/3, Method: DELETE, Timestamp: 2024-08-03T15:40:38.854754900
2024-08-03 15:40:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/favorites/1
2024-08-03 15:40:45 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]]
2024-08-03 15:40:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/favorites/1
2024-08-03 15:40:45 [http-nio-8080-exec-8] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1, Method: GET, Timestamp: 2024-08-03T15:40:45.966170400
2024-08-03 15:40:45 [http-nio-8080-exec-8] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/1, Method: GET, Timestamp: 2024-08-03T15:40:45.966170400
2024-08-03 15:40:52 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-03 15:40:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-03 15:40:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-04 22:13:21 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-04 22:13:21 [main] INFO  c.T.M.c.TransactionControllerTest - Starting TransactionControllerTest using Java 22.0.2 with PID 5508 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-04 22:13:21 [main] INFO  c.T.M.c.TransactionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-04 22:13:22 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionController' defined in file [C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes\com\TransferApp\MoneyTransfer\controller\TransactionController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.TransferApp.MoneyTransfer.service.ITransaction' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-08-04 22:13:22 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-04 22:13:22 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.TransferApp.MoneyTransfer.controller.TransactionController required a bean of type 'com.TransferApp.MoneyTransfer.service.ITransaction' that could not be found.


Action:

Consider defining a bean of type 'com.TransferApp.MoneyTransfer.service.ITransaction' in your configuration.

2024-08-04 22:13:22 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.TransferApp.MoneyTransfer.controllerTest.TransactionControllerTest@4ae8fb2a]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@48cdb156 testClass = com.TransferApp.MoneyTransfer.controllerTest.TransactionControllerTest, locations = [], classes = [com.TransferApp.MoneyTransfer.MoneyTransferApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [[ImportsContextCustomizer@4b4814d0 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35841320, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1040be71, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@eadd4fb, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43f02ef2, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@7d8021b9, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@df91bbad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@2d29b4ee, org.springframework.boot.test.context.SpringBootTestAnnotation@f50094f7], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:212)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:194)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:556)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:546)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:782)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionController' defined in file [C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes\com\TransferApp\MoneyTransfer\controller\TransactionController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.TransferApp.MoneyTransfer.service.ITransaction' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 72 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.TransferApp.MoneyTransfer.service.ITransaction' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1880)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 96 common frames omitted
2024-08-04 23:06:42 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-04 23:06:42 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Starting FavoriteRecipientServiceTest using Java 22.0.2 with PID 10968 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-04 23:06:42 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - No active profile set, falling back to 1 default profile: "default"
2024-08-04 23:06:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-04 23:06:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 4 JPA repository interfaces.
2024-08-04 23:06:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-04 23:06:44 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-04 23:06:44 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-04 23:06:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-04 23:06:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-04 23:06:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bc21e34
2024-08-04 23:06:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-04 23:06:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-04 23:06:48 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-04 23:06:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-04 23:06:48 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-04 23:06:48 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:06:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:06:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-04 23:06:49 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-04 23:06:50 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Started FavoriteRecipientServiceTest in 7.557 seconds (process running for 8.42)
2024-08-04 23:06:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-04 23:06:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-04 23:06:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-04 23:24:02 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-04 23:24:03 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 2052 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-04 23:24:03 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-04 23:24:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-04 23:24:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 4 JPA repository interfaces.
2024-08-04 23:24:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-04 23:24:04 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-04 23:24:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-04 23:24:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-04 23:24:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-04 23:24:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1206 ms
2024-08-04 23:24:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-04 23:24:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-04 23:24:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-04 23:24:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-04 23:24:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-04 23:24:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70aa58e1
2024-08-04 23:24:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-04 23:24:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-04 23:24:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-04 23:24:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-04 23:24:08 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-04 23:24:08 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-04 23:24:08 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-04 23:24:08 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-04 23:24:08 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-04 23:24:08 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-04 23:24:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-04 23:24:08 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 6.139 seconds (process running for 8.493)
2024-08-04 23:24:35 [http-nio-8080-exec-6] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-04 23:24:35 [http-nio-8080-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-04 23:24:35 [http-nio-8080-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-08-04 23:24:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-04 23:24:35 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-04 23:24:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-04 23:24:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-04 23:28:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/transactions/transfer
2024-08-04 23:28:41 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session FCBB3D9B5DB97094323A569F26585ADD, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-04 23:28:41 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@78bc9e1a]
2024-08-04 23:28:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/transactions/transfer
2024-08-04 23:28:43 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 2, Recipient: N/A, Timestamp: 2024-08-04T23:28:43.394732900
2024-08-04 23:28:43 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/transactions/transfer, Method: POST, Amount: 2, Recipient: N/A, Timestamp: 2024-08-04T23:28:43.394732900
2024-08-04 23:34:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-04 23:34:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-04 23:34:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 00:08:46 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-05 00:08:46 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Starting FavoriteRecipientServiceTest using Java 22.0.2 with PID 17500 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 00:08:46 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - No active profile set, falling back to 1 default profile: "default"
2024-08-05 00:08:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 00:08:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 4 JPA repository interfaces.
2024-08-05 00:08:50 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 00:08:50 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 00:08:50 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 00:08:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 00:08:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 00:08:53 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bc21e34
2024-08-05 00:08:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 00:08:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 00:08:54 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 00:08:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:08:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 00:08:59 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 00:08:59 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:08:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:08:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 00:09:00 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 00:09:00 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Started FavoriteRecipientServiceTest in 14.764 seconds (process running for 16.272)
2024-08-05 00:09:08 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:09:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 00:09:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 00:09:23 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-05 00:09:23 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Starting FavoriteRecipientServiceTest using Java 22.0.2 with PID 17544 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 00:09:23 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - No active profile set, falling back to 1 default profile: "default"
2024-08-05 00:09:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 00:09:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 4 JPA repository interfaces.
2024-08-05 00:09:25 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 00:09:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 00:09:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 00:09:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 00:09:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 00:09:26 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d98729a
2024-08-05 00:09:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 00:09:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 00:09:28 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 00:09:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:09:28 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 00:09:29 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 00:09:29 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:09:29 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:09:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 00:09:30 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 00:09:32 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Started FavoriteRecipientServiceTest in 8.715 seconds (process running for 9.69)
2024-08-05 00:09:38 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:09:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 00:09:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 00:26:24 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-05 00:26:24 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Starting FavoriteRecipientServiceTest using Java 22.0.2 with PID 10492 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 00:26:24 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - No active profile set, falling back to 1 default profile: "default"
2024-08-05 00:26:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 00:26:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 4 JPA repository interfaces.
2024-08-05 00:26:26 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 00:26:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 00:26:26 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 00:26:26 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 00:26:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 00:26:27 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e2772a9
2024-08-05 00:26:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 00:26:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 00:26:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 00:26:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:26:29 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 00:26:30 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 00:26:30 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:26:30 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:26:30 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 00:26:31 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 00:26:31 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Started FavoriteRecipientServiceTest in 7.808 seconds (process running for 8.838)
2024-08-05 00:26:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:26:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 00:26:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 00:29:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-05 00:29:35 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 5076 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 00:29:35 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-05 00:29:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 00:29:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 4 JPA repository interfaces.
2024-08-05 00:29:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-05 00:29:37 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-05 00:29:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-05 00:29:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-05 00:29:37 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-05 00:29:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1263 ms
2024-08-05 00:29:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 00:29:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 00:29:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 00:29:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 00:29:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 00:29:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c2e33
2024-08-05 00:29:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 00:29:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 00:29:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 00:29:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:29:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 00:29:39 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 00:29:39 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 00:29:39 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 00:29:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 00:29:40 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 00:29:40 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-05 00:29:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-05 00:29:40 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 5.204 seconds (process running for 5.793)
2024-08-05 00:32:01 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-05 00:32:01 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-05 00:32:01 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-08-05 00:32:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/favorites/1/59208542
2024-08-05 00:32:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/favorites/1/59208542
2024-08-05 00:32:09 [http-nio-8080-exec-3] ERROR c.T.M.service.sercurity.JwtUtils - expired jwt JWT expired at 2024-08-02T13:47:42Z. Current time: 2024-08-04T21:32:09Z, a difference of 200667189 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-08-05 00:32:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-05 00:32:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/favorites/1/59208542?continue to session
2024-08-05 00:32:09 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-05 00:32:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2024-08-05 00:32:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-05 00:32:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
2024-08-05 00:32:09 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-05 00:32:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-05 00:32:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-05 00:32:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-05 00:32:27 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-05 00:32:27 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/login, Method: POST, Timestamp: 2024-08-05T00:32:27.120702700
2024-08-05 00:32:27 [http-nio-8080-exec-5] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/login, Method: POST, Timestamp: 2024-08-05T00:32:27.121663100
2024-08-05 00:32:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/favorites/2/59208542
2024-08-05 00:32:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 878D61C21680BDF47E64E6D3428D2322
2024-08-05 00:32:39 [http-nio-8080-exec-6] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 41FCC3128A80B679764E1185960C0D75, for principal CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW)
2024-08-05 00:32:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=CustomerDetailsImpl(id=4, email=amir@gmail.com, password=$2a$10$sPIqgrIoJKasRhoqrRarA.6.n0f.6ZNJhmRliNl8YrLaMmIdb8xYW), Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@44b20931]
2024-08-05 00:32:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/favorites/2/59208542
2024-08-05 00:32:41 [http-nio-8080-exec-6] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/2/59208542, Method: POST, Timestamp: 2024-08-05T00:32:41.369404300
2024-08-05 00:32:41 [http-nio-8080-exec-6] INFO  c.T.M.logging.UserActivityFilter - User: amir@gmail.com, URL: /api/favorites/2/59208542, Method: POST, Timestamp: 2024-08-05T00:32:41.369404300
2024-08-05 00:35:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 00:35:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 00:35:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 23:16:39 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-05 23:16:39 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 17112 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 23:16:39 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-05 23:16:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 23:16:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189 ms. Found 4 JPA repository interfaces.
2024-08-05 23:16:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-05 23:16:44 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-05 23:16:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-05 23:16:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-05 23:16:44 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-05 23:16:44 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4694 ms
2024-08-05 23:16:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 23:16:44 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 23:16:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 23:16:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 23:16:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 23:16:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-05 23:16:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 23:16:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 23:16:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 23:16:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:16:51 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 23:16:52 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 23:16:52 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:16:52 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:16:52 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 23:16:53 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 23:16:53 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-05 23:16:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-05 23:16:53 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 15.496 seconds (process running for 33.972)
2024-08-05 23:26:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:26:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 23:26:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 23:53:15 [main] INFO  c.T.M.MoneyTransferApplicationTests - Starting MoneyTransferApplicationTests using Java 22.0.2 with PID 12680 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 23:53:15 [main] INFO  c.T.M.MoneyTransferApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-08-05 23:53:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 23:53:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 4 JPA repository interfaces.
2024-08-05 23:53:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 23:53:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 23:53:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 23:53:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 23:53:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 23:53:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-05 23:53:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 23:53:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 23:53:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 23:53:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:53:18 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 23:53:19 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 23:53:19 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:53:19 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:53:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 23:53:19 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 23:53:19 [main] INFO  c.T.M.MoneyTransferApplicationTests - Started MoneyTransferApplicationTests in 4.856 seconds (process running for 8.794)
2024-08-05 23:53:20 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest]: FavoriteRecipientServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-05 23:53:20 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.TransferApp.MoneyTransfer.MoneyTransferApplication for test class com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest
2024-08-05 23:53:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:53:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 23:53:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 23:56:21 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-05 23:56:21 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Starting FavoriteRecipientServiceTest using Java 22.0.2 with PID 10064 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 23:56:21 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - No active profile set, falling back to 1 default profile: "default"
2024-08-05 23:56:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 23:56:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 4 JPA repository interfaces.
2024-08-05 23:56:22 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 23:56:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 23:56:22 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 23:56:23 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 23:56:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 23:56:23 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-05 23:56:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 23:56:23 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 23:56:24 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 23:56:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:56:24 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 23:56:25 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 23:56:25 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:25 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:25 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 23:56:25 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 23:56:26 [main] INFO  c.T.M.s.FavoriteRecipientServiceTest - Started FavoriteRecipientServiceTest in 5.64 seconds (process running for 6.586)
2024-08-05 23:56:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:56:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 23:56:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 23:56:55 [main] INFO  c.T.M.MoneyTransferApplicationTests - Starting MoneyTransferApplicationTests using Java 22.0.2 with PID 14264 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 23:56:55 [main] INFO  c.T.M.MoneyTransferApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-08-05 23:56:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 23:56:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 4 JPA repository interfaces.
2024-08-05 23:56:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 23:56:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 23:56:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 23:56:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 23:56:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 23:56:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-05 23:56:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 23:56:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 23:56:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 23:56:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:56:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 23:56:59 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 23:56:59 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:56:59 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:56:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 23:56:59 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 23:56:59 [main] INFO  c.T.M.MoneyTransferApplicationTests - Started MoneyTransferApplicationTests in 4.466 seconds (process running for 8.105)
2024-08-05 23:57:00 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest]: FavoriteRecipientServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-05 23:57:00 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.TransferApp.MoneyTransfer.MoneyTransferApplication for test class com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest
2024-08-05 23:57:00 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:57:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 23:57:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-05 23:59:39 [main] INFO  c.T.M.MoneyTransferApplicationTests - Starting MoneyTransferApplicationTests using Java 22.0.2 with PID 13108 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-05 23:59:39 [main] INFO  c.T.M.MoneyTransferApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-08-05 23:59:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-05 23:59:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 4 JPA repository interfaces.
2024-08-05 23:59:40 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-05 23:59:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-05 23:59:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-05 23:59:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-05 23:59:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-05 23:59:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-05 23:59:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-05 23:59:41 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-05 23:59:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-05 23:59:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:59:42 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-05 23:59:42 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-05 23:59:42 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-05 23:59:42 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-05 23:59:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-05 23:59:43 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-05 23:59:43 [main] INFO  c.T.M.MoneyTransferApplicationTests - Started MoneyTransferApplicationTests in 4.745 seconds (process running for 8.248)
2024-08-05 23:59:43 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest]: FavoriteRecipientServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-05 23:59:43 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.TransferApp.MoneyTransfer.MoneyTransferApplication for test class com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest
2024-08-05 23:59:44 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-05 23:59:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-05 23:59:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-06 00:04:44 [main] INFO  c.T.M.MoneyTransferApplicationTests - Starting MoneyTransferApplicationTests using Java 22.0.2 with PID 11896 (started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-06 00:04:44 [main] INFO  c.T.M.MoneyTransferApplicationTests - No active profile set, falling back to 1 default profile: "default"
2024-08-06 00:04:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06 00:04:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 4 JPA repository interfaces.
2024-08-06 00:04:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06 00:04:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06 00:04:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-06 00:04:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06 00:04:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-06 00:04:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-06 00:04:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-06 00:04:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-06 00:04:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06 00:04:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06 00:04:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06 00:04:48 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06 00:04:48 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 00:04:48 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 00:04:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06 00:04:48 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-06 00:04:49 [main] INFO  c.T.M.MoneyTransferApplicationTests - Started MoneyTransferApplicationTests in 4.45 seconds (process running for 9.376)
2024-08-06 00:04:49 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest]: FavoriteRecipientServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-06 00:04:49 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.TransferApp.MoneyTransfer.MoneyTransferApplication for test class com.TransferApp.MoneyTransfer.serviceTest.FavoriteRecipientServiceTest
2024-08-06 00:04:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06 00:04:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-06 00:04:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-06 01:52:01 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-08-06 01:52:01 [main] INFO  c.T.M.MoneyTransferApplication - Starting MoneyTransferApplication using Java 22.0.2 with PID 10920 (C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer\target\classes started by Lenovo in C:\Users\Lenovo\Downloads\MoneyTransfer\MoneyTransfer)
2024-08-06 01:52:01 [main] INFO  c.T.M.MoneyTransferApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-06 01:52:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06 01:52:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 4 JPA repository interfaces.
2024-08-06 01:52:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-06 01:52:03 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-06 01:52:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-06 01:52:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06 01:52:03 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-06 01:52:03 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2066 ms
2024-08-06 01:52:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06 01:52:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06 01:52:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-06 01:52:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06 01:52:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-06 01:52:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-08-06 01:52:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-06 01:52:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-06 01:52:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06 01:52:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06 01:52:06 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06 01:52:06 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06 01:52:06 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public void com.TransferApp.MoneyTransfer.service.customerService.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.service.customerService; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.service.customerService.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.updateCustomer(long,com.TransferApp.MoneyTransfer.dto.updateCustomerDTO) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public void com.TransferApp.MoneyTransfer.controller.CustomerController.deleteCustomer(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.p.PrePostAnnotationSecurityMetadataSource - @org.springframework.security.access.prepost.PreAuthorize(value="@userAuthorizationService.canAccessUser(#id, authentication.name)") found on specific method: public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException
2024-08-06 01:52:06 [main] DEBUG o.s.s.a.m.DelegatingMethodSecurityMetadataSource - Caching method [CacheKey[com.TransferApp.MoneyTransfer.controller.CustomerController; public com.TransferApp.MoneyTransfer.dto.customerDTO com.TransferApp.MoneyTransfer.controller.CustomerController.getCustomerById(long) throws com.TransferApp.MoneyTransfer.exception.CustomerNotFoundException]] with attributes [[authorize: '@userAuthorizationService.canAccessUser(#id, authentication.name)', filter: 'null', filterTarget: 'null']]
2024-08-06 01:52:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06 01:52:07 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, AuthTokenFilter, ConcurrentSessionFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-08-06 01:52:07 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-06 01:52:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-08-06 01:52:07 [main] INFO  c.T.M.MoneyTransferApplication - Started MoneyTransferApplication in 6.722 seconds (process running for 16.116)
2024-08-06 01:55:22 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06 01:55:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-06 01:55:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-08-06 01:55:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:55:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:55:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:55:22 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:55:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:55:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:55:22 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:55:22 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:56:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:56:57 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:56:57 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:56:57 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:56:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:56:57 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:56:57 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:56:57 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:06 [http-nio-8080-exec-4] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:06 [http-nio-8080-exec-4] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:13 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:14 [http-nio-8080-exec-5] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:14 [http-nio-8080-exec-5] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:16 [http-nio-8080-exec-6] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:16 [http-nio-8080-exec-6] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:17 [http-nio-8080-exec-7] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:17 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:17 [http-nio-8080-exec-7] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:28 [http-nio-8080-exec-8] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:28 [http-nio-8080-exec-8] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:28 [http-nio-8080-exec-9] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:28 [http-nio-8080-exec-9] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:29 [http-nio-8080-exec-10] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:29 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:29 [http-nio-8080-exec-10] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:29 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:29 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:29 [http-nio-8080-exec-1] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:30 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:30 [http-nio-8080-exec-3] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:34 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:34 [http-nio-8080-exec-2] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2024-08-06 01:57:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/?continue to session
2024-08-06 01:57:40 [http-nio-8080-exec-4] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 01:57:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2024-08-06 01:57:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 01:57:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://fde5-154-176-91-52.ngrok-free.app/error?continue to session
2024-08-06 01:57:40 [http-nio-8080-exec-4] ERROR c.T.M.s.sercurity.AuthEntryPointJwt - Error while handling jwt , exception : Full authentication is required to access this resource
2024-08-06 02:00:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/login
2024-08-06 02:00:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:00:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/login
2024-08-06 02:02:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/register
2024-08-06 02:02:04 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:02:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/register
2024-08-06 02:02:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 02:02:32 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:02:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 02:02:33 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-06 02:03:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/login
2024-08-06 02:03:23 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:03:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/login
2024-08-06 02:03:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 02:03:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:03:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 02:04:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 02:04:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:04:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 02:04:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-06 02:07:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/login
2024-08-06 02:07:58 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:07:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/login
2024-08-06 02:08:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 02:08:03 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:08:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 02:08:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2024-08-06 02:45:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 02:45:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 02:45:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 03:37:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/register
2024-08-06 03:37:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 03:37:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/register
2024-08-06 03:38:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 03:38:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 03:38:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 03:38:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/login
2024-08-06 03:38:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2024-08-06 03:38:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/login
2024-08-06 06:48:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06 06:48:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-06 06:48:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
